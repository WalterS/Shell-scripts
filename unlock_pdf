#!/bin/bash

###############################################################
# unlock_pdf
# Unlocks a PDF file so that it can be printed, annotated, etc.
#
# WS 20110216
###############################################################
########## Changes ##########
####
# Added quotes to $output/$input so that filenames with blanks
# can be handled
# WS 20110715
####

input=$1
rc=0

usage () {
cat << END

${0##*/} unlocks a given PDF file

Usage: ${0##*/} <pdf_file>

The unlocked PDF file can be found in the same directory as the original file, with "_unlocked" appended to the file name.

END

}

#### Error correction
# Check if gs exists
if ! which gs &> /dev/null; then
	echo "\"gs\" is not in path (${PATH}). You might want to install the package \"ghostscript\" or check your PATH settings." >&2
	exit 1
fi

# Do we have a file name?
if [[ -z "$input" ]]; then
	usage >&2
	exit 1

fi

# Does the file exist?
if [[ ! -r "$input" ]]; then
	echo "Error: Could not find PDF file ${input}." >&2
	exit 1
fi

# Is the file a PDF document?
if ! file "$input" 2> /dev/null | grep -q "PDF document" &> /dev/null; then
	echo "Error: $input is not a PDF document." >&2
	usage >&2
	exit 1
fi

# Setting target file name
output="$(sed 's/\.[pP][dD][fF]$/_unlocked.pdf/' <<<$input)"
if [[ -z "$output" || "$output" == "$input" ]]; then
	echo "Error: Could not set output file name." >&2
	exit 1
fi

# We'll remove the output file if the progam is aborted
trap 'rm -rf "${output}" &> /dev/null; echo "Programm aborted" >&2; exit 99' 1 2 3 15

#### Here we go
echo -n "Writing to ${output}... "
gs -q -dSAFER -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sPDFPassword="" -dPDFSETTINGS=/prepress -dPassThroughJPEGImages=true -sOutputFile="$output" "$input" 2>/dev/null
rc=$?

if [[ $rc = 0 ]]; then
	echo "...done."
else
	echo "...done with errors. Please check ${output}."
fi

exit $rc

# EOF
