#!/bin/bash

############################################################
# show_services
# Show the status of all chkconfig-registered services
#
# The result of this script are not necessarily reliable,
# because not every service output my be accounted for.
#
# WS 20110329
############################################################
########## Changes ##########
####
# Removed the need for sed and test
# WS 20110419
####
####
# Replaced multiple greps with one sed
# WS 20111013
####


IFS=$'\n'
counter=0
service_list=
running_services=
service=

# Make sure we're run by root
if [[ "$(id -u)" != 0 ]]; then
	echo "This script must be run as root" >&2
	exit 1
fi

# Get service list
service_list=$(chkconfig --list | sort | awk '/0:/ && /3:/ {print $1}')

# Check service status
for service in $service_list; do
	# Services with no or more complex output
	case $service in
		netfs)
			if service $service status &> /dev/null; then
				running_services="${running_services}${service}\n"
				((counter++))
			fi
			;;
		network)
			if [[ -n "$(service network status | sed -n '/active/,/lo|eth/ {/eth\|lo/p}'" ]]; then
				running_services="${running_services}${service}\n"
				((counter++))
			fi
			;;
	esac
	if service $service status 2> /dev/null | egrep -q 'is running|DROP|enabled|are registered|are loaded'; then
		running_services="${running_services}${service}\n"
		((counter++))
	fi
done

# Print found services
if [[ $counter -gt 0 ]]; then
	echo "$counter services are running:"
	# Remove last "\n"
	running_services=${running_services%\\n}
	echo -e $running_services
else
	echo "Could not find any running service"
fi

exit 0

# EOF
